{
    "name": "genaiscript-workspace",
    "displayName": "GenAIScript",
    "description": "Programmatically assemble prompts for LLMs using JavaScript. Orchestrate LLMs, tools, and data in code.",
    "version": "1.115.0",
    "license": "MIT",
    "private": true,
    "workspaces": {
        "packages": [
            "packages/*"
        ]
    },
    "scripts": {
        "localai": "docker run -p 8080:8080 --name local-ai -ti localai/localai:latest-aio-cpu",
        "setup": "git submodule update --init --recursive",
        "setup:az": "curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash",
        "setup:bicep": "az bicep upgrade",
        "az:login": "az login --scope api://trapi/.default",
        "install:playwright": "yarn install playwright --with-deps",
        "install:force": "rm yarn.lock && yarn install && yarn --cwd docs install:force && yarn --cwd slides install:force && yarn gen:licenses",
        "compile-ext": "yarn --cwd packages/core run prompts:bundle && yarn --cwd packages/vscode run compile && yarn --cwd packages/web run compile",
        "compile-cli": "yarn --cwd packages/cli run compile",
        "compile": "yarn compile-ext && yarn compile-cli && yarn test:fix",
        "compile-debug": "yarn --cwd packages/cli run compile-debug",
        "compile:web": "yarn --cwd packages/web run build",
        "go": "cd packages/cli && yarn go",
        "token": "cd packages/sample && yarn token",
        "typecheck": "yarn --cwd packages/core run typecheck && yarn --cwd packages/vscode run typecheck && yarn --cwd packages/cli run typecheck && yarn --cwd packages/web run typecheck",
        "typecheck:web": "yarn --cwd packages/web run typecheck",
        "compile:action": "yarn compile && yarn typecheck",
        "lint": "yarn --cwd packages/cli run lint",
        "pretty": "prettier **.ts --write",
        "package": "cd packages/vscode && yarn package",
        "release:draft": "npx --yes release-it",
        "release:vsix": "npx --yes release-it --no-increment --no-git --github.release --github.update --github.assets=packages/vscode/genaiscript.vsix --no-github.draft",
        "release:npm": "cd packages/cli && npm publish",
        "patch-versions": "npx --yes zx scripts/patch-version.mjs",
        "commit-versions": "git add packages/**/package.json && git add docs/package.json && git add slides/package.json && git commit -m '[skip ci] updated version numbers' && git push",
        "release": "yarn typecheck && yarn compile && yarn package && yarn release:draft && yarn patch-versions && yarn compile && yarn package && yarn release:vsix && yarn commit-versions",
        "bump": "yarn release",
        "test:core": "cd packages/core && yarn test",
        "test:samples": "cd packages/sample && yarn test",
        "test:cli": "node packages/cli/built/genaiscript.cjs run code-annotator packages/sample/src/counting.py -l Test -o .genaiscript/tmp/tests/cli -ot .genaiscript/tmp/tests/cli/outtrace.md -oa .genaiscript/tmp/tests/cli/diags.sarif",
        "test:live": "node packages/cli/built/genaiscript.cjs run code-annotator packages/sample/src/counting.py -l Test -o .genaiscript/tmp/tests/cli --retry 1 --temperature 0.5 ",
        "test:front-matter": "node packages/cli/built/genaiscript.cjs run front-matter SUPPORT.md ",
        "test:summarize": "node packages/cli/built/genaiscript.cjs run summarize packages/sample/src/rag/markdown.md ",
        "test:pdf": "node packages/cli/built/genaiscript.cjs parse pdf packages/sample/src/rag/loremipsum.pdf",
        "test:docx": "node packages/cli/built/genaiscript.cjs parse docx packages/sample/src/rag/Document.docx",
        "retrieval:index": "node packages/cli/built/genaiscript.cjs retrieval index \"packages/sample/src/rag/*\"",
        "retrieval:search": "node packages/cli/built/genaiscript.cjs retrieval search lorem \"packages/sample/src/rag/*\"",
        "retrieval:codequery": "node packages/cli/built/genaiscript.cjs code query packages/core/src/progress.ts \"(interface_declaration) @i\"",
        "test:tokens": "node packages/cli/built/genaiscript.cjs retrieval tokens packages/sample/src/rag/*",
        "test:system": "cd packages/cli && node ./built/genaiscript.cjs scripts compile",
        "test:compile": "node packages/cli/built/genaiscript.cjs scripts compile",
        "test:fix": "node packages/cli/built/genaiscript.cjs scripts fix",
        "test:infomodel": "node packages/cli/built/genaiscript.cjs scripts model",
        "test:phi3": "node packages/cli/built/genaiscript.cjs run summarize-ollama-phi3 packages/sample/src/rag/markdown.md",
        "run:script": "cd packages/sample/ && yarn run:script",
        "run:script:debug": "yarn compile-debug && cd packages/sample/ && yarn run:script",
        "cache:clear": "cd packages/sample/ && yarn cache:clear",
        "test:scripts": "cd packages/sample/ && yarn test:scripts",
        "test:scripts:view": "cd packages/sample/ && yarn test:scripts:view",
        "serve:cli": "node --watch --watch-path=packages/cli/built packages/cli/built/genaiscript.cjs serve --dispatch-progress",
        "serve:web": "yarn --cwd packages/web watch",
        "serve": "yarn compile-cli && run-p serve:*",
        "docs": "cd docs && ./node_modules/.bin/astro telemetry disable && ./node_modules/.bin/astro dev --host",
        "slides": "cd slides && yarn run dev",
        "build:slides": "yarn --cwd slides install --frozen-lockfile --prefer-offline && yarn --cwd slides build",
        "build:docs": "yarn --cwd docs install --frozen-lockfile --prefer-offline && yarn --cwd docs build && yarn --cwd docs build:asw",
        "gen:licenses": "npx --yes generate-license-file --input ./package.json --output ./THIRD_PARTY_LICENSES.md --overwrite",
        "genai:technical": "cd docs && yarn genai:technical",
        "genai:frontmatter": "cd docs && yarn genai:frontmatter",
        "genai:alt": "cd docs && yarn genai:alt-text",
        "genai:test": "node packages/cli/built/genaiscript.cjs run test-gen",
        "genai:blog-post": "node packages/cli/built/genaiscript.cjs run blog-generator",
        "genai:readme": "node packages/cli/built/genaiscript.cjs run readme-updater",
        "genai:blogify": "node packages/cli/built/genaiscript.cjs run blogify-sample",
        "genai:tweetify": "node packages/cli/built/genaiscript.cjs run tweetify",
        "genai:docify": "node packages/cli/built/genaiscript.cjs run docify",
        "gcm": "node packages/cli/built/genaiscript.cjs run gcm --model gcm",
        "prd": "node packages/cli/built/genaiscript.cjs run prd -prd --model github:gpt-4o",
        "prr": "node packages/cli/built/genaiscript.cjs run prr -prr --model github:gpt-4o-mini",
        "genai": "node packages/cli/built/genaiscript.cjs run",
        "genai:convert": "node packages/cli/built/genaiscript.cjs convert",
        "genai:debug": "yarn compile-debug && node packages/cli/built/genaiscript.cjs run",
        "upgrade:deps": "zx scripts/upgrade-deps.mjs",
        "cli": "node packages/cli/built/genaiscript.cjs",
        "ffmpeg:install": "sudo apt-get update && sudo apt-get install ffmpeg -y",
        "ollama": "yarn ollama:stop && yarn ollama:start",
        "ollama:start": "docker run -d -v ollama:/root/.ollama -p 11434:11434 --name ollama -e OLLAMA_FLASH_ATTENTION=1 -e OLLAMA_KV_CACHE_TYPE=q8_0 ollama/ollama",
        "ollama:stop": "docker stop ollama && docker rm ollama",
        "whisper": "yarn whisper:stop && yarn whisper:start",
        "whisper:start": "docker run -d -p 9000:9000 -e ASR_MODEL=base -e ASR_ENGINE=openai_whisper onerahmet/openai-whisper-asr-webservice:latest",
        "whisper:stop": "docker stop whisper && docker rm ollama"
    },
    "release-it": {
        "github": {
            "release": true,
            "releaseName": "v${version}",
            "draft": true,
            "releaseNotes": "node packages/cli/built/genaiscript.cjs run git-release-notes --cache --cache-name releases --model release"
        }
    },
    "devDependencies": {
        "@inquirer/prompts": "^7.3.3",
        "glob": "^11.0.1",
        "npm-check-updates": "^17.1.15",
        "npm-run-all": "^4.1.5",
        "prettier": "^3.5.3",
        "zx": "^8.4.0"
    }
}
