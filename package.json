{
    "name": "genaiscript-workspace",
    "displayName": "GenAIScript",
    "description": "Programmatically assemble prompts for LLMs using JavaScript. Orchestrate LLMs, tools, and data in code.",
    "version": "1.137.7",
    "license": "MIT",
    "private": true,
    "pnpm": {
        "overrides": {
            "axios": "1.9.0",
            "glob": "^11.0.2",
            "@mapbox/node-pre-gyp": "^2.0.0",
            "json-colorizer": "^3.0.1"
        }
    },
    "scripts": {
        "localai": "docker run -p 8080:8080 --name local-ai -ti localai/localai:latest-aio-cpu",
        "setup": "git submodule update --init --recursive",
        "setup:az": "curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash",
        "setup:bicep": "az bicep upgrade",
        "az:login": "az login --scope api://trapi/.default",
        "install:playwright": "sudo pnpm playwright install-deps",
        "install:force": "rm -f pnpm-lock.yaml && pnpm install --force && pnpm -C docs install:force && pnpm -C slides install:force && pnpm gen:licenses",
        "compile:ext": "pnpm -C packages/core run prompts:bundle && pnpm -C packages/vscode run compile && pnpm -C packages/web run compile",
        "compile:cli": "pnpm -C packages/cli run compile",
        "compile": "pnpm compile:ext && pnpm compile:cli && pnpm test:fix",
        "compile-debug": "pnpm -C packages/cli run compile-debug",
        "compile:web": "pnpm -C packages/web run build",
        "go": "cd packages/cli && pnpm go",
        "token": "cd packages/sample && pnpm token",
        "typecheck": "pnpm -C packages/core run typecheck && pnpm -C packages/vscode run typecheck && pnpm -C packages/cli run typecheck && pnpm -C packages/web run typecheck",
        "typecheck:web": "pnpm -C packages/web run typecheck",
        "compile:action": "pnpm compile && pnpm typecheck",
        "lint": "pnpm -C packages/cli run lint",
        "pretty": "prettier **.ts --write",
        "package": "cd packages/vscode && pnpm package",
        "release:draft": "npx --yes release-it",
        "release:vsix": "npx --yes release-it --no-increment --no-git --github.release --github.update --github.assets=packages/vscode/genaiscript.vsix --no-github.draft",
        "release:npm": "cd packages/cli && npm publish",
        "patch-versions": "npx --yes zx scripts/patch-version.mjs",
        "commit-versions": "git add packages/**/package.json && git add docs/package.json && git add slides/package.json && git commit -m '[skip ci] updated version numbers' && git push",
        "release": "pnpm typecheck && pnpm compile && pnpm package && pnpm release:draft && pnpm patch-versions && pnpm compile && pnpm package && pnpm release:vsix && pnpm commit-versions",
        "bump": "pnpm release",
        "debug:mcp": "npx --yes @modelcontextprotocol/inspector node packages/cli/built/genaiscript.cjs mcp --groups mcp --cwd packages/sample --startup resources",
        "test:core": "cd packages/core && pnpm test",
        "test:samples": "cd packages/sample && pnpm test",
        "test:modulesamples": "cd packages/modulesample && pnpm test",
        "test:cli": "node packages/cli/built/genaiscript.cjs run code-annotator packages/sample/src/counting.py -l Test -o .genaiscript/tmp/tests/cli -ot .genaiscript/tmp/tests/cli/outtrace.md -oa .genaiscript/tmp/tests/cli/diags.sarif",
        "test:live": "node packages/cli/built/genaiscript.cjs run code-annotator packages/sample/src/counting.py -l Test -o .genaiscript/tmp/tests/cli --retry 1 --temperature 0.5 ",
        "test:front-matter": "node packages/cli/built/genaiscript.cjs run front-matter SUPPORT.md ",
        "test:summarize": "node packages/cli/built/genaiscript.cjs run summarize packages/sample/src/rag/markdown.md ",
        "test:pdf": "node packages/cli/built/genaiscript.cjs parse pdf packages/sample/src/rag/loremipsum.pdf",
        "test:docx": "node packages/cli/built/genaiscript.cjs parse docx packages/sample/src/rag/Document.docx",
        "retrieval:index": "node packages/cli/built/genaiscript.cjs retrieval index \"packages/sample/src/rag/*\"",
        "retrieval:search": "node packages/cli/built/genaiscript.cjs retrieval search lorem \"packages/sample/src/rag/*\"",
        "retrieval:codequery": "node packages/cli/built/genaiscript.cjs code query packages/core/src/progress.ts \"(interface_declaration) @i\"",
        "test:tokens": "node packages/cli/built/genaiscript.cjs retrieval tokens packages/sample/src/rag/*",
        "test:system": "cd packages/cli && node ./built/genaiscript.cjs scripts compile",
        "test:compile": "node packages/cli/built/genaiscript.cjs scripts compile",
        "test:fix": "node packages/cli/built/genaiscript.cjs scripts fix",
        "test:infomodel": "node packages/cli/built/genaiscript.cjs scripts model",
        "test:phi3": "node packages/cli/built/genaiscript.cjs run summarize-ollama-phi3 packages/sample/src/rag/markdown.md",
        "genai:module": "cd packages/modulesample && node ../cli/built/genaiscript.cjs run",
        "run:script": "cd packages/sample/ && pnpm run:script",
        "run:script:debug": "pnpm compile-debug && cd packages/sample/ && pnpm run:script",
        "cache:clear": "cd packages/sample/ && pnpm cache:clear",
        "test:scripts": "cd packages/sample/ && pnpm test:scripts",
        "test:scripts:view": "cd packages/sample/ && pnpm test:scripts:view",
        "serve:cli": "node --watch --watch-path=packages/cli/built packages/cli/built/genaiscript.cjs serve --dispatch-progress",
        "serve:web": "pnpm -C packages/web watch",
        "serve": "pnpm compile:cli && run-p serve:*",
        "docs": "cd docs && ./node_modules/.bin/astro telemetry disable && ./node_modules/.bin/astro dev --host",
        "slides": "cd slides && pnpm run dev",
        "build:slides": "pnpm -C slides install --frozen-lockfile --prefer-offline && pnpm -C slides build",
        "build:docs": "pnpm -C docs install --frozen-lockfile --prefer-offline && pnpm -C docs build && pnpm -C docs build:asw",
        "gen:licenses": "npx --yes generate-license-file --input ./package.json --output ./THIRD_PARTY_LICENSES.md --overwrite",
        "genai:technical": "cd docs && pnpm genai:technical",
        "genai:frontmatter": "pnpm genai:convert frontmatter \"docs/src/content/docs/reference/**/*.md*\" -- -p github --no-run-trace --no-output-trace",
        "genai:alt": "cd docs && pnpm genai:alt-text -p github",
        "genai:test": "node packages/cli/built/genaiscript.cjs run test-gen",
        "genai:blog-post": "node packages/cli/built/genaiscript.cjs run blog-generator",
        "genai:readme": "node packages/cli/built/genaiscript.cjs run readme-updater",
        "genai:blogify": "node packages/cli/built/genaiscript.cjs run blogify-sample",
        "genai:tweetify": "node packages/cli/built/genaiscript.cjs run tweetify",
        "genai:docify": "node packages/cli/built/genaiscript.cjs run docify",
        "genai:debugify": "node packages/cli/built/genaiscript.cjs run dbg-if",
        "genai:blog-images": "node packages/cli/built/genaiscript.cjs convert blog-image \"docs/src/content/docs/blog/*.md*\" --no-run-trace --no-output-trace",
        "genai:docs-images": "node packages/cli/built/genaiscript.cjs convert docs-image \"docs/src/content/docs/getting-started/**/*.md*\" \"docs/src/content/docs/reference/**/*.md*\" --no-run-trace --no-output-trace",
        "commit": "pnpm pretty && pnpm compile && pnpm test:core && pnpm gcm",
        "gcm": "node packages/cli/built/genaiscript.cjs run gcm --model gcm --no-run-trace --no-output-trace",
        "prd": "pnpm prd:text && pnpm prd:sketch",
        "prd:text": "node packages/cli/built/genaiscript.cjs run prd -prd --model github:gpt-4.1 --vars base=dev --no-run-trace --no-output-trace",
        "prd:visuals": "node packages/cli/built/genaiscript.cjs run prd-visuals -prd --model github:gpt-4.1 --vars base=dev",
        "prd:zine": "node packages/cli/built/genaiscript.cjs run prd-zine -prd --model github:gpt-4.1 --vars base=dev",
        "prd:meme": "node packages/cli/built/genaiscript.cjs run prd-meme -prd --model github:gpt-4.1 --vars base=dev",
        "prd:sketch": "node packages/cli/built/genaiscript.cjs run prd-sketch -prd --model github:gpt-4.1 --vars base=dev",
        "prd:narration": "node packages/cli/built/genaiscript.cjs run prd-narration -prd --model github:gpt-4.1 --vars base=dev",
        "prd:dev": "node packages/cli/built/genaiscript.cjs run prd -prd --model azure:gpt-4.1_2025-04-14 --vars maxTokens=500000"
    },
    "dependencies": {
        "tree-sitter-wasms": "^0.1.12"
    },
    "devDependencies": {
        "esbuild": "^0.25.4",
        "fs-extra": "^11.3.0",
        "pretty-ms": "^9.2.0",
        "undici": "^7.9.0"
    }
}
