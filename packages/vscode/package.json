{
    "name": "genaiscript-vscode",
    "publisher": "genaiscript",
    "homepage": "https://microsoft.github.io/genaiscript/",
    "author": {
        "name": "Microsoft Corporation"
    },
    "displayName": "GenAIScript Insiders",
    "description": "Generative AI Scripting.",
    "version": "1.70.1",
    "icon": "icon.png",
    "engines": {
        "vscode": "^1.93.0"
    },
    "keywords": [
        "javascript",
        "typescript",
        "genai",
        "openai",
        "chatgpt",
        "gpt4",
        "ai",
        "copilot",
        "scripting",
        "python",
        "llm",
        "gpt"
    ],
    "categories": [
        "Programming Languages",
        "Machine Learning",
        "Education",
        "Notebooks",
        "Other"
    ],
    "license": "MIT",
    "extensionKind": [
        "workspace"
    ],
    "npm": {
        "publish": false
    },
    "activationEvents": [
        "workspaceContains:**/*.genai.{js,mjs,mts,prompty}",
        "onNotebook:genaiscript"
    ],
    "main": "./built/extension.js",
    "bugs": {
        "url": "https://github.com/microsoft/genaiscript/issues"
    },
    "repository": {
        "url": "https://github.com/microsoft/genaiscript"
    },
    "contributes": {
        "chatParticipants": [
            {
                "id": "genaiscript",
                "description": "Calls the GenAIScript agent.",
                "name": "genaiscript",
                "fullName": "GenAIScript",
                "isSticky": false,
                "disambiguation": [
                    {
                        "category": "workspace_question",
                        "description": "Runs GenAIScript agents defined in the current respository.",
                        "examples": []
                    }
                ]
            }
        ],
        "configurationDefaults": {
            "files.associations": {
                ".gitignore.genai": "ignore"
            }
        },
        "markdown.markdownItPlugins": true,
        "problemMatchers": [
            {
                "name": "genaiscript",
                "label": "GenAIScript annotations",
                "source": "Generated by a LLM.",
                "applyTo": "allDocuments",
                "fileLocation": [
                    "relative",
                    "${workspaceFolder}"
                ],
                "pattern": {
                    "regexp": "^\\s*::(info|notice|warning|error)\\s+file=([^,]+),\\s*line=(\\d+)(,\\s*endLine=(\\d+)\\s*)?(,\\s*code=([^,:]+)?\\s*)?::(.*)$",
                    "severity": 1,
                    "file": 2,
                    "line": 3,
                    "code": 7,
                    "message": 8
                }
            }
        ],
        "taskDefinitions": [
            {
                "type": "genaiscript",
                "required": [
                    "script"
                ],
                "properties": {
                    "script": {
                        "type": "string",
                        "description": "GenAIScript script to run"
                    }
                }
            }
        ],
        "walkthroughs": [
            {
                "id": "genaiscript.tutorial",
                "title": "GenAI scripting with GenAIScript",
                "description": "Use GenAIScript to create LLM-powered scripts.",
                "steps": [
                    {
                        "id": "genaiscript.tutirla.node",
                        "title": "Install Node.JS LTS",
                        "description": "GenAIScript requires Node.JS LTS to run. [Read more...](https://microsoft.github.io/genaiscript/getting-started/installation/)",
                        "media": {
                            "image": "media/tutorial-start.png",
                            "altText": ""
                        }
                    },
                    {
                        "id": "genaiscript.tutorial.start",
                        "title": "Open Tutorial Notebook",
                        "description": "You will learn how to create LLM-powered scripts using JavaScript.\nOpen the command palette and select **GenAIScript: Create Mardown Notebook** to get started.",
                        "media": {
                            "image": "media/tutorial-start.png",
                            "altText": ""
                        },
                        "completionEvents": [
                            "onCommand:genaiscript.notebook.create"
                        ]
                    }
                ]
            }
        ],
        "notebooks": [
            {
                "type": "genaiscript",
                "displayName": "GenAIScript Markdown Notebook",
                "priority": "option",
                "selector": [
                    {
                        "filenamePattern": "*.{md,mdx,markdown}"
                    }
                ]
            }
        ],
        "markdown.previewStyles": [
            "./markdown.css"
        ],
        "icons": {
            "genaiscript-logo": {
                "description": "GenAIScript logo",
                "default": {
                    "fontPath": "./built/genaiscript.woff",
                    "fontCharacter": "\\E000"
                }
            }
        },
        "viewsContainers": {
            "activitybar": [
                {
                    "id": "genaiscript",
                    "title": "GenAIScript",
                    "icon": "./icon.svg"
                }
            ]
        },
        "views": {
            "genaiscript": [
                {
                    "id": "genaiscript.trace",
                    "name": "Trace"
                },
                {
                    "id": "genaiscript.connections",
                    "name": "Connections",
                    "visibility": "collapsed"
                },
                {
                    "id": "genaiscript.prompts",
                    "name": "Scripts",
                    "visibility": "collapsed"
                },
                {
                    "id": "genaiscript.prompts.requests",
                    "name": "Runs",
                    "visibility": "collapsed"
                },
                {
                    "id": "genaiscript.llm.requests",
                    "name": "Chat Requests",
                    "visibility": "collapsed"
                }
            ]
        },
        "menus": {
            "editor/context": [
                {
                    "command": "genaiscript.fragment.prompt",
                    "when": "!inDebugMode",
                    "group": "genaiscript@1"
                },
                {
                    "command": "genaiscript.fragment.debug",
                    "when": "!inDebugMode",
                    "group": "genaiscript@2"
                }
            ],
            "file/newFile": [
                {
                    "command": "genaiscript.newfile.script"
                }
            ],
            "editor/title/run": [
                {
                    "command": "genaiscript.fragment.prompt",
                    "when": "!inDebugMode && resourceFilename =~ /.*\\.((genai\\.(js|mjs|mts))|prompty)$/",
                    "group": "genaiscript@1"
                },
                {
                    "command": "genaiscript.fragment.debug",
                    "when": "!inDebugMode && resourceFilename =~ /.*\\.genai\\.(js|mjs|mts)$/",
                    "group": "genaiscript@2"
                }
            ],
            "commandPalette": [
                {
                    "command": "genaiscript.fragment.debug",
                    "when": "false"
                },
                {
                    "command": "genaiscript.newfile.script",
                    "when": "false"
                },
                {
                    "command": "genaiscript.prompt.navigate",
                    "when": "false"
                },
                {
                    "command": "genaiscript.request.open",
                    "when": "false"
                },
                {
                    "command": "genaiscript.request.status",
                    "when": "false"
                }
            ],
            "view/title": [
                {
                    "command": "genaiscript.request.abort",
                    "when": "view == genaiscript.trace",
                    "group": "navigation"
                },
                {
                    "command": "genaiscript.prompt.create",
                    "when": "view == genaiscript.prompts",
                    "group": "navigation"
                },
                {
                    "command": "genaiscript.prompt.refresh",
                    "when": "view == genaiscript.prompts",
                    "group": "navigation"
                }
            ],
            "view/item/context": [
                {
                    "command": "genaiscript.prompt.fork",
                    "when": "view == genaiscript.prompts && viewItem  =~ /^prompt/"
                }
            ],
            "explorer/context": [
                {
                    "command": "genaiscript.fragment.prompt",
                    "when": "explorerViewletVisible && !inDebugMode && !(resourceFilename =~ /\\.genai\\.(js|mjs|mts|prompty)$/)",
                    "group": "genaiscript@1"
                }
            ]
        },
        "configuration": [
            {
                "title": "GenAIScript",
                "properties": {
                    "genaiscript.languageChatModels": {
                        "type": "object",
                        "description": "Mapping from GenAIScript model (openai:gpt-4) to Visual Studio Code Language Chat Model (github...)"
                    },
                    "genaiscript.diagnostics": {
                        "type": "boolean",
                        "default": false,
                        "description": "Enable developer diagnostic mode. Including leaving terminals opened."
                    },
                    "genaiscript.cache": {
                        "type": "boolean",
                        "default": true,
                        "description": "Enable or disables LLM request cache support."
                    },
                    "genaiscript.cli.version": {
                        "type": "string",
                        "description": "GenAIScript CLI version to use. Default matches the extension version."
                    },
                    "genaiscript.cli.path": {
                        "type": "string",
                        "description": "Path to GenAIScript CLI. Default uses npx."
                    }
                }
            }
        ],
        "commands": [
            {
                "command": "genaiscript.notebook.create",
                "title": "Create GenAIScript Mardown Notebook",
                "category": "GenAIScript"
            },
            {
                "command": "genaiscript.request.abort",
                "title": "Abort OpenAI request",
                "category": "GenAIScript",
                "icon": "$(debug-stop)"
            },
            {
                "command": "genaiscript.fragment.prompt",
                "title": "Run GenAiScript...",
                "category": "GenAIScript",
                "icon": "$(genaiscript-logo)"
            },
            {
                "command": "genaiscript.fragment.debug",
                "title": "Debug GenAiScript...",
                "category": "GenAIScript",
                "icon": "$(debug)"
            },
            {
                "command": "genaiscript.prompt.navigate",
                "title": "Navigate to script",
                "category": "GenAIScript"
            },
            {
                "command": "genaiscript.prompt.create",
                "title": "Create new script...",
                "icon": "$(add)",
                "category": "GenAIScript"
            },
            {
                "command": "genaiscript.prompt.refresh",
                "title": "Refresh script list",
                "icon": "$(refresh)",
                "category": "GenAIScript"
            },
            {
                "command": "genaiscript.newfile.script",
                "title": "GenAiScript File",
                "category": "GenAIScript"
            },
            {
                "command": "genaiscript.prompt.fork",
                "title": "Fork GenAiScript...",
                "category": "GenAIScript",
                "icon": "$(repo-forked)"
            },
            {
                "command": "genaiscript.request.open",
                "title": "Open request or response",
                "category": "GenAIScript"
            },
            {
                "command": "genaiscript.request.open.trace",
                "title": "Open Trace",
                "category": "GenAIScript"
            },
            {
                "command": "genaiscript.request.open.output",
                "title": "Open Output",
                "category": "GenAIScript"
            },
            {
                "command": "genaiscript.request.status",
                "title": "Show information message about OpenAI request status",
                "category": "GenAIScript"
            },
            {
                "command": "genaiscript.openIssueReporter",
                "title": "Report Issue...",
                "category": "GenAIScript"
            },
            {
                "command": "genaiscript.info.env",
                "title": "Configuration information...",
                "category": "GenAIScript"
            },
            {
                "command": "genaiscript.connection.configure",
                "title": "Configure connection...",
                "category": "GenAIScript"
            },
            {
                "command": "genaiscript.samples.download",
                "title": "Download sample...",
                "category": "GenAIScript"
            }
        ]
    },
    "scripts": {
        "vscode:update-dts": "npx @vscode/dts dev && mv vscode.*.d.ts src/",
        "vscode:prepublish": "yarn run compile",
        "compile:icons": "node updatefonts.mjs",
        "compile:extension": "esbuild src/extension.ts --sourcemap --metafile=./esbuild.meta.json --bundle --format=cjs --platform=node --target=node20 --outfile=built/extension.js --external:tsx --external:esbuild --external:get-tsconfig --external:resolve-pkg-maps --external:vscode --external:pdfjs-dist --external:web-tree-sitter --external:tree-sitter-wasms --external:@lvce-editor/ripgrep --external:gpt-3-encoder",
        "compile": "yarn compile:icons && yarn compile:extension",
        "vis:treemap": "npx --yes esbuild-visualizer --metadata esbuild.meta.json --filename esbuild.treemap.html",
        "vis:network": "npx --yes esbuild-visualizer --metadata esbuild.meta.json --filename esbuild.network.html --template network",
        "vis:sunburst": "npx --yes esbuild-visualizer --metadata esbuild.meta.json --filename esbuild.sunburst.html --template sunburst",
        "lint": "eslint src --ext ts",
        "run-in-browser": "vscode-test-web --browserType=chromium --extensionDevelopmentPath=. ../sample",
        "typecheck": "tsc -p .",
        "prepackage": "zx prepackage.mjs",
        "postpackage": "zx postpackage.mjs",
        "package": "vsce package --dependencies --out genaiscript.vsix --yarn",
        "generate-manifest": "vsce generate-manifest -i genaiscript.vsix -o genaiscript.manifest"
    },
    "devDependencies": {
        "@types/markdown-it": "^14.1.2",
        "@types/vscode": "^1.93.0",
        "@vscode/vsce": "^3.2.0",
        "assert": "^2.1.0",
        "es-toolkit": "^1.26.1",
        "markdown-it-github-alerts": "^0.3.0",
        "process": "^0.11.10",
        "typescript": "5.6.3",
        "vscode-uri": "^3.0.8",
        "webfont": "^11.2.26",
        "websocket-polyfill": "0.0.3",
        "zx": "^8.1.9"
    }
}
