import * as esbuild from "esbuild"
import { writeFile } from "fs/promises"

/** @type {import('esbuild').BuildOptions} */
const config = {
    entryPoints: ["src/extension.ts"],
    bundle: true,
    format: "cjs",
    platform: "node",
    target: "node20",
    outfile: "built/extension.js",
    sourcemap: true,
    metafile: true,
    external: [
        "vscode",
        "tsx",
        "esbuild",
        "get-tsconfig",
        "resolve-pkg-maps",
        "dockerode",
        "pdfjs-dist",
        "web-tree-sitter",
        "tree-sitter-wasms",
        "promptfoo",
        "typescript",
        "@lvce-editor/ripgrep",
        "gpt-3-encoder",
        "mammoth",
        "xlsx",
        "mathjs",
        "@azure/identity",
        "gpt-tokenizer",
        "playwright",
        "@inquirer/prompts",
        "jimp",
        "turndown",
        "turndown-plugin-gfm",
        "vectra",
        "tabletojson",
        "html-to-text",
        "@octokit/rest",
        "@octokit/plugin-throttling",
        "@octokit/plugin-retry",
        "@octokit/plugin-paginate-rest",
        "@opentelemetry/api",
        "@opentelemetry/exporter-trace-otlp-http",
        "@opentelemetry/resources",
        "@opentelemetry/sdk-node",
        "@opentelemetry/semantic-conventions",
        "skia-canvas",
        "@huggingface/transformers",
        "@modelcontextprotocol/sdk",
        "@anthropic-ai/sdk",
        "@anthropic-ai/bedrock-sdk",
        "es-toolkit",
        "zod",
        "zod-to-json-schema",
        "fluent-ffmpeg",
        "json-schema-generator",
        "pyodide",
        "file-type",
        "@azure/search-documents",
        "debug",
        "@ast-grep/napi",
        "z3-solver",
        "groq-js",
        "toml",
    ],
}

const result = await esbuild.build(config)
const stats = await esbuild.analyzeMetafile(result.metafile)
await writeFile("built/stats.txt", stats, { encoding: "utf-8" })
