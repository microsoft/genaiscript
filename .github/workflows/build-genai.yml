name: build genai tests

on:
    workflow_dispatch:
    schedule:
        - cron: "0 7 * * *"
    push:
        branches: [main]
        paths:
            - "packages/core/**"
            - "packages/sample/**"
            - "packages/cli/**"
concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true
jobs:
    build:
        runs-on: ubuntu-latest
        env:
            OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
            OPENAI_API_TYPE: ${{ secrets.OPENAI_API_TYPE }}
            OPENAI_API_BASE: ${{ secrets.OPENAI_API_BASE }}
            AZURE_OPENAI_API_BASE: ${{ secrets.OPENAI_API_BASE }}
            AZURE_OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        steps:
            - uses: actions/checkout@v4
              with:
                  submodules: "recursive"
                  fetch-depth: 0
            - uses: actions/setup-node@v4
              with:
                  node-version: "20"
                  cache: yarn
            - run: yarn install --frozen-lockfile
            - name: typecheck
              run: yarn typecheck
            - name: compile
              run: yarn compile
            - name: download ollama docker
              run: docker run -d -v ollama:/root/.ollama -p 11434:11434 --name ollama ollama/ollama
            - name: run test within scripts
              run: yarn test:scripts --out-summary ./summary.txt --test-delay 10
            - name: Append summary.txt to $GITHUB_STEP_SUMMARY
              run: |
                  cat packages/sample/summary.txt >> $GITHUB_STEP_SUMMARY
            - name: Add comment to PR
              uses: actions/github-script@v5
              if: github.event_name == 'pull_request'
              with:
                  github-token: ${{ secrets.GITHUB_TOKEN }}
                  script: |
                      import { readFile } from 'fs/promises';
                      const comment = await readFile('packages/sample/summary.txt', 'utf8');
                      await github.rest.issues.createComment({
                        issue_number: context.issue.number,
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        body: comment
                      })
